#version 330 core

//input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;

//notice that the "1" here equals the "1" in glVertexAttribPointer
layout(location = 1) in vec4 vertexColor;

//values that stay constant for the whole mesh.
uniform mat4 MVP;

//output data ; will be interpolated for each fragment.
out vec4 fragmentColor;

void main(){
    //output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP * vec4(vertexPosition_modelspace, 1);
	
	//the color of each vertex will be interpolated
    //to produce the color of each fragment
    fragmentColor = vertexColor;
}

